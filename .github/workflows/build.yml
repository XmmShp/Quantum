name: Build Check

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  CONFIGURATION: 'Release'

permissions:
  pages: write

jobs:
  build:
    name: Build Check
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: |
        dotnet restore ./SDK/Quantum.Sdk/Quantum.Sdk.csproj
        dotnet restore ./SDK/Quantum.BundleTool/Quantum.BundleTool.csproj
        dotnet restore ./Runtime/Quantum.Runtime.csproj
    
    - name: Build SDK Projects
      run: |
        dotnet build ./SDK/Quantum.Sdk/Quantum.Sdk.csproj -c ${{ env.CONFIGURATION }} --no-restore
        dotnet build ./SDK/Quantum.BundleTool/Quantum.BundleTool.csproj -c ${{ env.CONFIGURATION }} --no-restore

    - name: Build Runtime
      run: dotnet build ./Runtime/Quantum.Runtime.csproj -c ${{ env.CONFIGURATION }} --no-restore

    - name: Setup DocFX
      run: dotnet tool install -g docfx

    - name: Build Documentation
      run: docfx docfx.json

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'

  deploy:
    if: github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
