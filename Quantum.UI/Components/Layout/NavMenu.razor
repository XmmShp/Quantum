@using Quantum.Core.Models
@using Quantum.Infrastructure.States
@inject NavigationManager NavigationManager
@inject UserState UserState
@implements IDisposable

<div class="nav-container">
    <a class="navbar-brand" href="">
        <Icon Type="thunderbolt" Theme="IconThemeType.Fill" />
        @if (!Collapsed)
        {
            <span>Quantum</span>
        }
    </a>

    <nav class="nav-menu">
        <div class="nav-item">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <Icon Type="home" Theme="IconThemeType.Outline" />
                @if (!Collapsed)
                {
                    <span>主页</span>
                }
            </NavLink>
        </div>
        @if (UserState.IsLoggedIn)
        {
            <div class="nav-item">
                <NavLink class="nav-link" href="courses">
                    <Icon Type="read" Theme="IconThemeType.Outline" />
                    @if (!Collapsed)
                    {
                        <span>课程列表</span>
                    }
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="graduation">
                    <Icon Type="audit" Theme="IconThemeType.Outline" />
                    @if (!Collapsed)
                    {
                        <span>毕业自审</span>
                    }
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="wishlist">
                    <Icon Type="heart" Theme="IconThemeType.Outline" />
                    @if (!Collapsed)
                    {
                        <span>愿望单</span>
                    }
                </NavLink>
            </div>
        }
    </nav>
</div>

<style>
    .nav-container {
        display: flex;
        flex-direction: column;
        padding: 1.5rem;
        height: 100%;
        background: linear-gradient(180deg, #7b1fa2 0%, #9c27b0 100%);
    }

    .navbar-brand {
        font-size: 1.25rem;
        color: white;
        text-decoration: none;
        margin-bottom: 2rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        font-weight: 500;
    }

    .nav-menu {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .nav-item {
        font-size: 0.9rem;
    }

    .nav-link {
        color: rgba(255, 255, 255, 0.85);
        display: flex;
        align-items: center;
        gap: 0.75rem;
        text-decoration: none;
        padding: 0.75rem 1rem;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .nav-link:hover {
        color: white;
        background-color: rgba(255, 255, 255, 0.15);
        transform: translateX(4px);
    }

    .nav-link.active {
        background-color: rgba(255, 255, 255, 0.2);
        color: white;
        font-weight: 500;
    }
</style>

@code {
    [Parameter]
    public bool Collapsed { get; set; }

    protected override void OnInitialized()
    {
        UserState.OnUserStateChanged += StateHasChanged;
    }

    public void Dispose()
    {
        UserState.OnUserStateChanged -= StateHasChanged;
    }
}
