@using Quantum.Infrastructure.Abstractions
@using Quantum.Infrastructure.Models
@inject IEnumerable<IUiModule> Modules
@inject NavigationManager NavigationManager

@if (_currentModule != null)
{
    <Sider Class="site-sidebar"
           Collapsible
           DefaultCollapsed="_collapsed"
           CollapsedWidth="48"
           Width="220"
           @bind-Collapsed="_collapsed">
        <Menu Mode="MenuMode.Inline"
              Theme="MenuTheme.Light"
              InlineCollapsed="@_collapsed"
              SelectedKeys="@(new[] { _currentItemKey })"
              DefaultOpenKeys="@(new[] { _currentModuleKey })">
            @foreach (var item in _currentModule.GetNavigationItems())
            {
                if (item.Children.Any())
                {
                    <SubMenu Key="@item.Key" TitleTemplate="@GetItemTitle(item)">
                        @foreach (var child in item.Children)
                        {
                            <MenuItem Key="@child.Key" RouterLink="@child.Route">
                                @GetItemTitle(child)
                            </MenuItem>
                        }
                    </SubMenu>
                }
                else
                {
                    <MenuItem Key="@item.Key" RouterLink="@item.Route">
                        @GetItemTitle(item)
                    </MenuItem>
                }
            }
        </Menu>
    </Sider>
}

<style>
    .site-sidebar {
        background: #fff;
        border-right: 1px solid #f0f0f0;
        overflow: auto;
        height: calc(100vh - 80px);
        position: sticky;
        top: 80px;
        left: 0;
    }

    :global(.site-sidebar .ant-layout-sider-children) {
        display: flex;
        flex-direction: column;
    }

    :global(.site-sidebar .ant-menu) {
        flex: 1;
        border-right: none;
    }

    :global(.site-sidebar .ant-menu-inline .ant-menu-item),
    :global(.site-sidebar .ant-menu-inline .ant-menu-submenu-title) {
        font-size: 14px;
    }
</style>

@* ReSharper disable once InconsistentNaming *@
@code {
    private IUiModule? _currentModule;
    private string? _currentModuleKey;
    private string? _currentItemKey;
    private bool _collapsed;

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += OnLocationChanged;
        UpdateCurrentModule();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        UpdateCurrentModule();
        StateHasChanged();
    }

    private void UpdateCurrentModule()
    {
        var path = new Uri(NavigationManager.Uri).LocalPath;
        
        foreach (var module in Modules)
        {
            var items = module.GetNavigationItems().ToList();
            var allItems = items.Concat(items.SelectMany(i => i.Children));

            var navigationItems = allItems as NavigationItem[] ?? allItems.ToArray();

            if (!navigationItems.Any(item => path.StartsWith(item.Route)))
            { continue; }
            
            _currentModule = module;
            _currentModuleKey = items.FirstOrDefault()?.Key;
            _currentItemKey = navigationItems.FirstOrDefault(item => path.StartsWith(item.Route))?.Key;
            return;
        }

        _currentModule = null;
    }

    private RenderFragment GetItemTitle(NavigationItem item) => __builder =>
    {
        if (item.CustomTitle is not null && !_collapsed)
        {
            @item.CustomTitle
        }
        else
        {
            if (_collapsed)
            {
                <Icon Type="@item.Icon" Theme="IconThemeType.Outline" />
            }
            else
            {
                <Space Size="SpaceSize.Small">
                    <SpaceItem>
                        <Icon Type="@item.Icon" Theme="IconThemeType.Outline" />
                    </SpaceItem>
                    <SpaceItem>
                        @item.Title
                    </SpaceItem>
                </Space>
            }
        }
    };
}
