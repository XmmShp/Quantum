@using Quantum.Sdk
@inject NavigationManager NavigationManager
@inject IEnumerable<IUiModule> Modules

<Menu Mode="MenuMode.Horizontal"
      Theme="MenuTheme.Dark"
      Class="nav-menu"
      SelectedKeys="@(new[] { _currentModuleKey })"
      OnMenuItemClicked="OnMenuItemClicked">
    @foreach (var module in Modules)
    {
        <MenuItem Key="@module.DefaultRoute">
            <Template>
                <Space Size="@SpaceSize.Middle">
                    @if (!string.IsNullOrEmpty(module.ModuleIcon))
                    {
                        <SpaceItem>
                            <Icon Type="@module.ModuleIcon" Theme="IconThemeType.Outline" />
                        </SpaceItem>
                    }
                    <SpaceItem>
                        @module.ModuleTitle
                    </SpaceItem>
                </Space>
            </Template>
        </MenuItem>
    }
    <MenuItem Key="/modules">
        <Template>
            <Space Size="@SpaceSize.Middle">
                <SpaceItem>
                    <Icon Type="appstore" Theme="IconThemeType.Outline" />
                </SpaceItem>
                <SpaceItem>
                    插件管理
                </SpaceItem>
            </Space>
        </Template>
    </MenuItem>
</Menu>

<style>
    .nav-menu {
        line-height: 46px;
        padding: 0 24px;
        border: none;
    }

    .module-title {
        font-size: 14px;
        font-weight: 500;
    }

    :global(.nav-menu.ant-menu-dark .ant-menu-item-selected) {
        background-color: #1890ff;
    }

    :global(.nav-menu.ant-menu-dark .ant-menu-submenu-selected) {
        background-color: #1890ff;
    }
</style>

@code {
    private string? _currentModuleKey;

    private void OnMenuItemClicked(MenuItem menuItem)
    {
        var key = menuItem.Key;
        _currentModuleKey = key;
        NavigationManager.NavigateTo(key);
    }
}
